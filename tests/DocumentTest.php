<?php

namespace Crell\Document\Test;


use Crell\Document\Collection\Collection;
use Crell\Document\Document\Document;
use Doctrine\DBAL\Connection;
use Doctrine\DBAL\DriverManager;

class DocumentTest extends \PHPUnit_Framework_TestCase {

    /**
     *
     * @var Connection
     */
    protected $conn;

    /**
     *
     * @var string
     */
    protected $databaseName = 'document_experiment';

    /**
     *
     * @var string
     */
    protected $databaseUser = 'test';

    /**
     *
     * @var string
     */
    protected $databasePass = 'test';

    public function setUp()
    {
        parent::setUp();

        $this->ensureDatabase();

        $connectionParams = [
            'dbname' => $this->databaseName,
            'user' => $this->databaseUser,
            'password' => $this->databasePass,
            'host' => 'localhost',
            'driver' => 'pdo_mysql',
        ];

        $this->conn = DriverManager::getConnection($connectionParams);
    }


    protected function ensureDatabase() : bool
    {
        $connectionParams = [
            'user' => $this->databaseUser,
            'password' => $this->databasePass,
            'host' => 'localhost',
            'driver' => 'pdo_mysql',
        ];

        $conn = DriverManager::getConnection($connectionParams);

        $databases = $conn->getSchemaManager()->listDatabases();
        if (! in_array($this->databaseName, $databases)) {
            $conn->getSchemaManager()->createDatabase($this->databaseName);
            return true;
        }

        return false;
    }

    public function tearDown() {
        $databases = $this->conn->getSchemaManager()->listDatabases();
        if (in_array($this->databaseName, $databases)) {
            $this->conn->getSchemaManager()->dropDatabase($this->databaseName);
        }

        parent::tearDown(); // TODO: Change the autogenerated stub
    }


    public function testCollection()
    {
        $collection = new Collection('coll', $this->conn);
        $collection->initializeSchema();
    }

    public function testSaveAndLoad()
    {
        $collection = new Collection('coll', $this->conn);
        $collection->initializeSchema();

        $doc = new Document('123');

        $collection->save($doc);

        $newdoc = $collection->load('123');

        $this->assertEquals($doc->uuid(), $newdoc->uuid());

    }
}
